events {
        worker_connections  1024;
}
http {
  upstream zot-registry {
    server zot-registry:5000;
  }

  ## Set a variable to help us decide if we need to add the
  ## 'Docker-Distribution-Api-Version' header.
  ## The registry always sets this header.
  ## In the case of nginx performing auth, the header is unset
  ## since nginx is auth-ing before proxying.
  map $upstream_http_docker_distribution_api_version $docker_distribution_api_version {
    '' 'registry/2.0';
  }
  server {
    listen 80;
    #server_name mydomain_or_myip;
    location / {
        rewrite ^/crls/comm-root-ec-ca-g1\.crl$ /ejbca/publicweb/crls/search.cgi?sKIDHash=QlijugcIsd3sij0B9ouAPe38TA4 permanent;
        rewrite ^/aia/comm-root-ec-ca-g1\.crt$ /ejbca/publicweb/certificates/search.cgi?sKIDHash=QlijugcIsd3sij0B9ouAPe38TA4 permanent;
        rewrite ^/crls/comm-sub-ec-ca-g1\.crl$ /ejbca/publicweb/crls/search.cgi?sKIDHash=U0eFNfKNMAZI9A8Fy948s5C4I7A permanent;
        rewrite ^/aia/comm-sub-ec-ca-g1\.crt$ /ejbca/publicweb/certificates/search.cgi?sKIDHash=U0eFNfKNMAZI9A8Fy948s5C4I7A permanent;
        rewrite ^/ocsp$ /ejbca/publicweb/status/ocsp permanent;
        proxy_pass                              http://ejbca:8081/;
        proxy_set_header Host                   $http_host;
        proxy_set_header X-Real-IP              $remote_addr;
        proxy_set_header X-Forwarded-For        $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto      $scheme;
    }
  }
  server {
    listen 80;
    server_name registry.community2024.local;
    client_max_body_size 300M;

    location /v2/ {
      # Do not allow connections from docker 1.5 and earlier
      # docker pre-1.6.0 did not properly set the user agent on ping, catch "Go *" user agents
      if ($http_user_agent ~ "^(docker\/1\.(3|4|5(?!\.[0-9]-dev))|Go ).*$" ) {
        return 404;
      }
        ## If $docker_distribution_api_version is empty, the header is not added.
        ## See the map directive above where this variable is defined.
        add_header 'Docker-Distribution-Api-Version' $docker_distribution_api_version always;
        # To add basic authentication to v2 use auth_basic setting.
        auth_basic "Registry realm";
        auth_basic_user_file /etc/nginx/nginx.htpasswd;
        proxy_pass                              http://zot-registry;
        proxy_set_header Host                   $http_host;
        proxy_set_header X-Real-IP              $remote_addr;
        proxy_set_header X-Forwarded-For        $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto      $scheme;
        proxy_read_timeout                      900;
    }
    location / {
      auth_basic off;
      # Do not allow connections from docker 1.5 and earlier
      # docker pre-1.6.0 did not properly set the user agent on ping, catch "Go *" user agents
      if ($http_user_agent ~ "^(docker\/1\.(3|4|5(?!\.[0-9]-dev))|Go ).*$" ) {
        return 404;
      }
        ## If $docker_distribution_api_version is empty, the header is not added.
        ## See the map directive above where this variable is defined.
        add_header 'Docker-Distribution-Api-Version' $docker_distribution_api_version always;
        proxy_pass                              http://zot-registry;
        proxy_set_header Host                   $http_host;
        proxy_set_header X-Real-IP              $remote_addr;
        proxy_set_header X-Forwarded-For        $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto      $scheme;
        proxy_read_timeout                      900;
    }
  }
  server {
    listen 443 ssl;
    server_name registry.community2024.local;
    client_max_body_size 0;
    chunked_transfer_encoding on;
    ssl_certificate     /etc/nginx/tls/registry.crt;
    ssl_certificate_key /etc/nginx/tls/registry.key;
    ssl_client_certificate /etc/nginx/tls/ca.crt;

    location /v2/ {
      # Do not allow connections from docker 1.5 and earlier
      # docker pre-1.6.0 did not properly set the user agent on ping, catch "Go *" user agents
      if ($http_user_agent ~ "^(docker\/1\.(3|4|5(?!\.[0-9]-dev))|Go ).*$" ) {
        return 404;
      }
        ## If $docker_distribution_api_version is empty, the header is not added.
        ## See the map directive above where this variable is defined.
        add_header 'Docker-Distribution-Api-Version' $docker_distribution_api_version always;
        # To add basic authentication to v2 use auth_basic setting.
        auth_basic "Registry realm";
        auth_basic_user_file /etc/nginx/nginx.htpasswd;
        proxy_pass                              http://zot-registry;
        proxy_set_header Host                   $http_host;
        proxy_set_header X-Real-IP              $remote_addr;
        proxy_set_header X-Forwarded-For        $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto      $scheme;
        proxy_read_timeout                      900;
    }
    location / {
      auth_basic off;
      # Do not allow connections from docker 1.5 and earlier
      # docker pre-1.6.0 did not properly set the user agent on ping, catch "Go *" user agents
      if ($http_user_agent ~ "^(docker\/1\.(3|4|5(?!\.[0-9]-dev))|Go ).*$" ) {
        return 404;
      }
        ## If $docker_distribution_api_version is empty, the header is not added.
        ## See the map directive above where this variable is defined.
        add_header 'Docker-Distribution-Api-Version' $docker_distribution_api_version always;
        proxy_pass                              http://zot-registry;
        proxy_set_header Host                   $http_host;
        proxy_set_header X-Real-IP              $remote_addr;
        proxy_set_header X-Forwarded-For        $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto      $scheme;
        proxy_read_timeout                      900;
    }
  }
  server {
    listen 443 ssl;
    server_name enroll.community2024.local;
    ssl_certificate     /etc/nginx/tls/server.crt;
    ssl_certificate_key /etc/nginx/tls/server.key;
    ssl_client_certificate /etc/nginx/tls/ca.crt;
    ssl_verify_client optional_no_ca;
    location / {
        proxy_pass                              http://ejbca:8082/;
        proxy_set_header Host                   $http_host;
        proxy_set_header X-Real-IP              $remote_addr;
        proxy_set_header X-Forwarded-For        $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto      $scheme;
        proxy_set_header SSL_CLIENT_CERT        $ssl_client_cert;
    }
  }
  server {
    listen 443 ssl;
    server_name sign.community2024.local;
    ssl_certificate     /etc/nginx/tls/signserver.crt;
    ssl_certificate_key /etc/nginx/tls/signserver.key;
    ssl_client_certificate /etc/nginx/tls/ca.crt;
    ssl_verify_client optional_no_ca;
    location / {
        proxy_pass                              http://signserver:8082/;
        proxy_set_header Host                   $http_host;
        proxy_set_header X-Real-IP              $remote_addr;
        proxy_set_header X-Forwarded-For        $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto      $scheme;
        proxy_set_header SSL_CLIENT_CERT        $ssl_client_cert;
    }
  }
}
