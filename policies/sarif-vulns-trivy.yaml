# Copyright 2024 The Chainloop Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: workflowcontract.chainloop.dev/v1
kind: Policy
metadata:
  name:  sarif-vulns
  description: |
    Checks that the vulnerability severity or score, found in a SARIF report, are below an input threshold. It supports "score" input for numeric threshold, or "severity" for text-based severity. Compatible with Trivy reports
  annotations:
    category: security,CVE
spec:
  type: SARIF
  embedded: |
    package sarif_vulns

    import rego.v1

    default threshold := "5.0"

    threshold := input.args.score

    is_trivy if {
      some run in input.runs
      lower(run.tool.driver.name) == "trivy"
    }

    # Convert input.args.severity to threshold number using Trivy mapping
    threshold := trivy_threshold if {
      is_trivy

      not input.args.score
      severity := lower(input.args.severity)

      trivy_threshold := map_trivy_threshold(severity)
    }

    # map trivy severity to scores, according to their own mapping
    # https://github.com/aquasecurity/trivy/blob/0799770b8827a8276ad0d6d9ac7e0381c286757c/pkg/report/sarif.go#L382
    map_trivy_threshold("critical") := "9.5"

    map_trivy_threshold("high") := "8.0"

    map_trivy_threshold("medium") := "5.5"

    map_trivy_threshold("low") := "2.0"

    violations contains msg if {
      some run in input.runs
      some rule in run.tool.driver.rules
      cvss := rule.properties["security-severity"]
      to_number(cvss) >= to_number(threshold)

      some result in run.results
      result.ruleId == rule.id

      msg := result.message.text
    }